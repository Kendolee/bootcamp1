name: Deploy to EC2 (Dockerfile)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to EC2 using Dockerfile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Ensure known_hosts has EC2 host
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -T 60 -H ${{ secrets.EC2_HOST }} 2>/dev/null >> ~/.ssh/known_hosts || \
          (echo "Failed to resolve EC2_HOST: ${{ secrets.EC2_HOST }}" && exit 1)

      - name: Sync files to EC2 (rsync)
        run: |
          REMOTE_PATH="/home/${{ secrets.EC2_USER }}/app"
          rsync -avz --delete --exclude='.git' ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${REMOTE_PATH}

      - name: Build and run Docker container on EC2 from Dockerfile
        run: |
          REMOTE_PATH="/home/${{ secrets.EC2_USER }}/app"
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "\
            cd ${REMOTE_PATH} && \
            docker build -t my-app . && \
            docker stop my-app || true && \
            docker rm my-app || true && \
            docker run -d --name my-app -p 80:80 my-app"

      - name: Notify success
        run: echo "Dockerfile build and deployment finished"

# NOTES:
# - Ensure EC2_HOST is the public IP or DNS of your EC2 instance.
# - Docker must be installed on EC2.
# - Update the `docker run` command's port mapping and options to fit your app.
# - Secrets used: EC2_HOST, EC2_USER, EC2_SSH_KEY.
